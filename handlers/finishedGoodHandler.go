package handlers

import (
	"github.com/gin-gonic/gin"
	"gorm.io/gorm"
	"net/http"
	"zavod/models"
)

func ListFinishedGoods(c *gin.Context, db *gorm.DB) {
	var finishedGoods []models.FinishedGood
	var units []models.Unit

	// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –≥–æ—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –≤–º–µ—Å—Ç–µ —Å –∏—Ö –µ–¥–∏–Ω–∏—Ü–∞–º–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è
	db.Preload("Unit").Find(&finishedGoods)

	// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
	db.Find(&units)

	// –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —à–∞–±–ª–æ–Ω
	c.HTML(http.StatusOK, "finished_goods.html", gin.H{
		"finishedGoods": finishedGoods,
		"units":         units,
	})
}

// üèó CRUD –¥–ª—è Finished Goods
func CreateFinishedGood(c *gin.Context, db *gorm.DB) {
	var finishedGood models.FinishedGood

	// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
	if err := c.BindJSON(&finishedGood); err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": "Invalid input data"})
		return
	}

	// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
	db.Create(&finishedGood)

	// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç —Å id
	c.JSON(http.StatusOK, finishedGood)
}

func DeleteFinishedGood(c *gin.Context, db *gorm.DB) {
	id := c.Param("id")

	// –ò—â–µ–º –∏ —É–¥–∞–ª—è–µ–º
	if err := db.Delete(&models.FinishedGood{}, id).Error; err != nil {
		c.JSON(http.StatusNotFound, gin.H{"error": "Finished good not found"})
		return
	}

	c.JSON(http.StatusOK, gin.H{"message": "–ì–æ—Ç–æ–≤–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞"})
}

func UpdateFinishedGood(c *gin.Context, db *gorm.DB) {
	var finishedGood models.FinishedGood
	id := c.Param("id")

	// –ò—â–µ–º –∑–∞–ø–∏—Å—å
	if err := db.First(&finishedGood, id).Error; err != nil {
		c.JSON(http.StatusNotFound, gin.H{"error": "Finished good not found"})
		return
	}

	// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
	if err := c.BindJSON(&finishedGood); err != nil {
		c.JSON(http.StatusBadRequest, gin.H{"error": "Invalid input data"})
		return
	}

	// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
	db.Save(&finishedGood)

	c.JSON(http.StatusOK, finishedGood)
}
